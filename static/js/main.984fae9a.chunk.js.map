{"version":3,"sources":["fonts/korinn.ttf","fonts/Swiss921-BT_43276.ttf","GameLoader.js","PlayerChooser.js","JeopardyBoard.js","Scoreboard.js","FinalJeopardy.js","App.js","index.js"],"names":["module","exports","GameLoader","gameLoadedHandler","event","target","files","text","then","data","JSON","parse","undefined","game","console","log","validateGame","props","updateGame","className","type","name","onChange","this","React","Component","PlayerChooser","addPlayer","state","input","setState","handlePlayGame","playGame","handleKeyPress","key","inputHandler","value","players","map","player","i","onKeyPress","autoFocus","placeholder","onClick","JeopardyBoard","clueKeyPress","board","currentCategory","currentClue","clue","clues","dailyDouble","dailyDoubleScreenPresented","solution","backToBoard","document","addEventListener","removeEventListener","renderClue","category","_","j","chosen","chooseClue","categoryName","showDailyDoubleScreen","html","dangerouslySetInnerHTML","__html","Scoreboard","changeWager","wager","wagers","updateScore","clueValue","correct","renderPlayer","currentValue","wagering","scoreString","score","parseInt","stats","incorrect","FinalJeopardy","finishGame","final","App","Object","assign","round","downloadGame","element","createElement","file","Blob","stringify","href","URL","createObjectURL","download","body","appendChild","click","playing","proceedToDouble","proceedToFinal","allowProceedToDouble","forEach","allowProceedToFinal","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.984fae9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/korinn.d5d36d20.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Swiss921-BT_43276.6433bfa5.ttf\";","import React from 'react';\nimport './GameLoader.css';\n\nfunction validateGame(data) {\n  const game = data.game;\n  if (game === undefined) {\n    console.log('Game key not found in JSON payload.');\n    return false;\n  }\n  // TODO: additional validation\n  return true;\n}\n\nclass GameLoader extends React.Component {\n  render() {\n    return (\n      <div className=\"game-loader\">\n        <h1>Jeopardy Player</h1>\n        <p>Designed by Brian Yu</p>\n        <input type=\"file\" name=\"file\" onChange={this.gameLoadedHandler}/>\n      </div>\n    );\n  }\n\n  gameLoadedHandler = (event) => {\n    event.target.files[0].text()\n         .then(text => {\n            const data = JSON.parse(text);\n            if (validateGame(data)) {\n              this.props.updateGame(data);\n            } else {\n              console.log(\"Invalid game.\");\n            }\n         });\n  }\n}\n\nexport default GameLoader;","import React from 'react';\nimport './PlayerChooser.css';\n\nclass PlayerChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ''\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"player-chooser\">\n        <div>\n          <h1>Players</h1>\n          <ul>\n            {this.props.players.map((player, i) => <li key={i}>{player.name}</li>)}\n          </ul>\n        </div>\n        <div>\n          <input value={this.state.input} onKeyPress={this.handleKeyPress} onChange={this.inputHandler} autoFocus type=\"text\" placeholder=\"Player Name\" />\n          <button className=\"add-player-button\" onClick={this.addPlayer}>Add Player</button>\n        </div>\n        <div>\n          <button className=\"play-game-button\" onClick={this.handlePlayGame}>Play Game</button>\n        </div>\n      </div>\n    );\n  }\n\n  addPlayer = () => {\n    this.props.addPlayer(this.state.input);\n    this.setState({\n      input: ''\n    });\n  }\n\n  handlePlayGame = (event) => {\n    this.props.playGame()\n  }\n\n  handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      this.addPlayer();\n    }\n  }\n\n  inputHandler = (event) => {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n}\n\nexport default PlayerChooser;","import React from 'react';\nimport './JeopardyBoard.css';\n\nclass JeopardyBoard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      solution: false,\n      dailyDoubleScreenPresented: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.clueKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.clueKeyPress);\n  }\n\n  render() {\n    const { board, currentCategory, currentClue } = this.props;\n\n    if (currentCategory !== null && currentClue !== null) {\n      return this.renderClue(\n        board[currentCategory].category,\n        board[currentCategory].clues[currentClue],\n        board[currentCategory].clues[currentClue].value\n      ); \n    }\n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              {board.map((category, i) => (\n                <td key={i} className=\"category-title\">\n                  {category.category}\n                </td>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {board[0].clues.map((_, j) => {\n              return (\n                <tr key={j}>\n                  {board.map((category, i) => {\n                    if (category.clues[j].chosen) {\n                      return (\n                        <td key={i} className=\"board-clue\"></td>\n                      );\n                    }\n                    return (\n                      <td\n                        key={i}\n                        onClick={() => this.props.chooseClue(i, j)}\n                        className=\"board-clue\">\n                          ${category.clues[j].value}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n\n  renderClue(categoryName, clue, value) {\n    const showDailyDoubleScreen = clue.dailyDouble && !this.state.dailyDoubleScreenPresented;\n    return (\n      <div className=\"clue\">\n        <div className=\"clue-category-label\">\n          {categoryName} - ${clue.value}\n        </div>\n        <div className={showDailyDoubleScreen ? \"clue-display daily-double\" : \"clue-display\"}>\n            <br/>\n            {showDailyDoubleScreen ? \"Daily Double\" : \n             clue.html === true ? <div dangerouslySetInnerHTML={{ __html: this.state.solution ? clue.solution : clue.clue}} /> :\n             this.state.solution ? clue.solution : clue.clue}\n        </div>\n      </div>\n    )\n  }\n\n  clueKeyPress = (event) => {\n    const { board, currentCategory, currentClue } = this.props;\n    if (currentCategory === null || currentClue === null) {\n      return;\n    }\n    const clue = board[currentCategory].clues[currentClue];\n\n    if (event.key === \" \" || event.key === \"Enter\") {\n      \n      // If we just showed the Daily Double screen, switch to the clue\n      if (clue.dailyDouble && !this.state.dailyDoubleScreenPresented) {\n        this.setState({\n          dailyDoubleScreenPresented: true,\n          solution: false\n        });\n\n      // Otherwise, toggle between question and solution\n      } else {\n        this.setState(state => {\n          return {\n            solution: !state.solution\n          }\n        });\n      }\n    } else if (event.key === \"Escape\") {\n      this.setState({\n        solution: false,\n        dailyDoubleScreenPresented: false\n      })\n      this.props.backToBoard();\n    }\n  }\n}\n\nexport default JeopardyBoard;","\nimport React from 'react';\nimport './Scoreboard.css';\n\nclass Scoreboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wagers: props.players.map(() => \"\")\n    }\n  }\n\n  render() {\n    const { players } = this.props;\n    return (\n      <div className=\"scoreboard\">\n        {\n          players.map((player, i) => this.renderPlayer(player, i))\n        }\n      </div>\n    );\n  }\n\n  renderPlayer(player, i) {\n    const { currentValue, wagering } = this.props;\n    const scoreString = player.score >= 0 ? `$${player.score}` : `-$${-player.score}`;\n\n    const clueValue = currentValue === null ? null :\n                      wagering === false ? currentValue :\n                      parseInt(this.state.wagers[i]) || 0;\n    return (\n      <div key={i} className=\"podium\">\n        <div className=\"podium-score\">\n          {scoreString}\n        </div>\n        <div className=\"podium-name\">\n          {player.name}\n        </div>\n        {wagering &&\n          <div>\n            <input\n              className=\"wager-box\"\n              value={this.state.wagers[i]}\n              onChange={(event) => this.changeWager(i, event.target.value)}\n            />\n          </div>\n        }\n        {currentValue !== null && \n          <div>\n            <button\n              onClick={() => this.updateScore(i, -clueValue, false)}\n              className=\"incorrect-answer\">\n              -${clueValue}\n            </button>\n            <button\n              onClick={() => this.updateScore(i, clueValue, true)}\n              className=\"correct-answer\">\n               +${clueValue}\n            </button>\n          </div>\n        }\n        {\n          this.props.stats &&\n          <div className=\"stats\">\n            <hr />\n            <div>Correct: {player.correct}</div>\n            <div>Incorrect: {player.incorrect}</div>\n          </div>\n        }\n      </div>\n    )\n  }\n\n  changeWager = (i, wager) => {\n    this.setState(state => {\n      const wagers = state.wagers;\n      wagers[i] = wager;\n      return {wagers};\n    });\n  }\n\n  updateScore = (i, clueValue, correct) => {\n    this.setState(state => {\n      const wagers = state.wagers;\n      wagers[i] = \"\";\n      return {wagers};\n    })\n    this.props.updateScore(i, clueValue, correct);\n  }\n\n}\n\nexport default Scoreboard;","import React from 'react';\n\nclass FinalJeopardy extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      category: true,\n      solution: false\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.clueKeyPress);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.clueKeyPress);\n  }\n\n  render() {\n    const { category, solution } = this.state;\n    const { final } = this.props;\n\n    if (category) {\n      return (\n        <div className=\"clue\">\n          <div className=\"clue-display final-category\">\n            {final.category}\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className=\"clue\">\n        <div className=\"clue-display\">\n          {final.html === true ? <div dangerouslySetInnerHTML={{ __html: solution ? final.solution : final.clue }} /> :\n           solution ? final.solution : final.clue}\n        </div>\n      </div>\n    )\n  }\n\n  clueKeyPress = (event) => {\n    const { category, solution } = this.state;\n\n    if (event.key === \" \" || event.key === \"Enter\") {\n        if (category) {\n          this.setState({\n            category: false,\n            solution: false\n          });\n        } else {\n          this.setState(state => ({\n            solution: !state.solution\n          }));\n        }\n    } else if (event.key === \"Escape\" && !category && solution) {\n      this.props.finishGame();\n    }\n  }\n}\n\nexport default FinalJeopardy;","import React from 'react';\nimport './App.css';\nimport GameLoader from './GameLoader';\nimport PlayerChooser from './PlayerChooser';\nimport JeopardyBoard from './JeopardyBoard';\nimport Scoreboard from './Scoreboard';\nimport FinalJeopardy from './FinalJeopardy';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: null,\n      players: [],\n      playing: false,\n      round: \"single\",\n      currentCategory: null,\n      currentClue: null\n    }\n  }\n\n  render() {\n    if (this.state.game === null) {\n      return (\n        <div className=\"app\">\n          <GameLoader\n            updateGame={this.updateGame} \n          />\n        </div>\n      );\n    } else if (!this.state.playing) {\n      return (\n        <div className=\"app\">\n          <PlayerChooser\n            players={this.state.players}\n            addPlayer={this.addPlayer}\n            playGame={this.playGame}\n          />\n        </div>\n      );\n    } else if (this.state.round === \"single\" || this.state.round === \"double\") {\n      const { currentCategory, currentClue } = this.state;\n      const board = this.state.game[this.state.round];\n      \n      // See if we should be able to proceed to Double Jeopardy\n      let allowProceedToDouble = this.state.round === \"single\";\n      if (allowProceedToDouble) {\n        board.forEach(category => {\n          category.clues.forEach(clue => {\n            if (clue.chosen === undefined) {\n              allowProceedToDouble = false;\n            }\n          })\n        })\n      }\n\n      let allowProceedToFinal = this.state.round === \"double\";\n      if (allowProceedToFinal) {\n        board.forEach(category => {\n          category.clues.forEach(clue => {\n            if (clue.chosen === undefined) {\n              allowProceedToFinal = false;\n            }\n          });\n        });\n      }\n\n      return (\n        <div className=\"app\">\n          {currentCategory === null && currentClue === null && allowProceedToDouble &&\n            <div>\n              <button onClick={this.proceedToDouble} className=\"proceed-to\">\n                Proceed to Double Jeopardy\n              </button>\n            </div>}\n          {currentCategory === null && currentClue === null && allowProceedToFinal &&\n            <div>\n              <button onClick={this.proceedToFinal} className=\"proceed-to\">\n                Proceed to Final Jeopardy\n              </button>\n            </div>}\n\n          <JeopardyBoard\n            board={board}\n            backToBoard={this.backToBoard}\n            chooseClue={this.chooseClue}\n            currentCategory={currentCategory}\n            currentClue={currentClue}\n          />\n          <Scoreboard\n            players={this.state.players}\n            currentValue={currentCategory !== null && currentClue !== null ? board[currentCategory].clues[currentClue].value : null}\n            updateScore={this.updateScore}\n            wagering={currentCategory !== null && currentClue !== null && board[currentCategory].clues[currentClue].dailyDouble === true}\n            stats={false}\n          />\n          <button onClick={this.downloadGame} className=\"download\">Download Game</button>\n        </div>\n      )\n    } else if (this.state.round === \"final\") {\n      const final = this.state.game.final;\n      return (\n        <div>\n          <FinalJeopardy\n            final={final}\n            finishGame={this.finishGame}\n          />\n          <Scoreboard\n            players={this.state.players}\n            currentValue={0}\n            updateScore={this.updateScore}\n            wagering={true}\n            stats={false}\n          />\n          <button onClick={this.downloadGame} className=\"download\">Download Game</button>\n        </div>\n      );\n    } else if (this.state.round === \"done\") {\n      return (\n        <div>\n          <Scoreboard\n            players={this.state.players}\n            currentValue={null}\n            updateScore={this.updateScore}\n            wagering={false}\n            stats={true}\n          />\n          <button onClick={this.downloadGame} className=\"download\">Download Game</button>\n        </div>\n      );\n    }\n  }\n\n  addPlayer = (name) => {\n    this.setState(state => ({\n      players: [...state.players, {name: name, score: 0, correct: 0, incorrect: 0}]\n    }));\n  }\n\n  chooseClue = (i, j) => {\n    this.setState(state => {\n      let game = Object.assign({}, state.game);\n      let round = game[state.round];\n      round[i].clues[j].chosen = true;\n      return {\n        game: game,\n        currentCategory: i,\n        currentClue: j\n      };\n    })\n  }\n\n  backToBoard = () => {\n    this.setState({\n      currentCategory: null,\n      currentClue: null\n    })\n  }\n\n  downloadGame = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([JSON.stringify({\n      game: this.state.game,\n      players: this.state.players,\n      round: this.state.round\n    }, null, 4)], {type: \"text/plain\"});\n    element.href = URL.createObjectURL(file);\n    element.download = \"game.json\";\n    document.body.appendChild(element);\n    element.click();\n  }\n\n  finishGame = () => {\n    this.setState({\n      round: \"done\"\n    });\n  }\n\n  playGame = () => {\n    this.setState({\n      playing: true\n    })\n  }\n\n  proceedToDouble = () => {\n    this.setState({\n      round: \"double\"\n    });\n  }\n\n  proceedToFinal = () => {\n    this.setState({\n      round: \"final\"\n    });\n  }\n\n  updateGame = (data) => {\n    this.setState(state => ({\n      game: data.game,\n      players: data.players !== undefined ? data.players : state.players,\n      round: data.round !== undefined ? data.round : state.round,\n      playing: data.players !== undefined\n    }));\n  }\n\n  updateScore = (player, value, correct) => {\n    this.setState(state => {\n      const players = [...state.players];\n      players[player].score += value;\n      if (correct)\n        players[player].correct++;\n      else\n        players[player].incorrect++;\n      return {players};\n    });\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// Fonts\nimport './fonts/korinn.ttf'\nimport './fonts/Swiss921-BT_43276.ttf'\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}